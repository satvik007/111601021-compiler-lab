
state 0:

	init : . program 

	INT	shift 5
	ID	shift 4
	LET	shift 3

	init	goto 45
	program	goto 2
	exp	goto 1

	.	reduce by rule 2


state 1:

	program : exp . SEMICOLON program 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 

	SEMICOLON	shift 10
	PLUS	shift 9
	MINUS	shift 8
	TIMES	shift 7
	DIVIDE	shift 6


	.	error


state 2:

	init : program .  (reduce by rule 0)



	.	reduce by rule 0


state 3:

	exp : LET . decs IN exps END 

	VAR	shift 16
	FUNCTION	shift 15

	vardec	goto 14
	funcdec	goto 13
	decs	goto 12
	dec	goto 11

	.	reduce by rule 15


state 4:

	exp : ID .  (reduce by rule 4)



	.	reduce by rule 4


state 5:

	exp : INT .  (reduce by rule 3)



	.	reduce by rule 3


state 6:

	exp : exp DIVIDE . exp 

	INT	shift 5
	ID	shift 4
	LET	shift 3

	exp	goto 17

	.	error


state 7:

	exp : exp TIMES . exp 

	INT	shift 5
	ID	shift 4
	LET	shift 3

	exp	goto 18

	.	error


state 8:

	exp : exp MINUS . exp 

	INT	shift 5
	ID	shift 4
	LET	shift 3

	exp	goto 19

	.	error


state 9:

	exp : exp PLUS . exp 

	INT	shift 5
	ID	shift 4
	LET	shift 3

	exp	goto 20

	.	error


state 10:

	program : exp SEMICOLON . program 

	INT	shift 5
	ID	shift 4
	LET	shift 3

	program	goto 21
	exp	goto 1

	.	reduce by rule 2


state 11:

	decs : dec . SEMICOLON decs 
	decs : dec .  (reduce by rule 14)

	SEMICOLON	shift 22


	.	reduce by rule 14


state 12:

	exp : LET decs . IN exps END 

	IN	shift 23


	.	error


state 13:

	dec : funcdec .  (reduce by rule 17)



	.	reduce by rule 17


state 14:

	dec : vardec .  (reduce by rule 16)



	.	reduce by rule 16


state 15:

	funcdec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 

	ID	shift 24


	.	error


state 16:

	vardec : VAR . ID ASSIGN exp 

	ID	shift 25


	.	error


state 17:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 8)

	PLUS	shift 9
	MINUS	shift 8


	.	reduce by rule 8


state 18:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 7)
	exp : exp . DIVIDE exp 

	PLUS	shift 9
	MINUS	shift 8


	.	reduce by rule 7


state 19:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 6)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 



	.	reduce by rule 6


state 20:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 5)
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 



	.	reduce by rule 5


state 21:

	program : exp SEMICOLON program .  (reduce by rule 1)



	.	reduce by rule 1


state 22:

	decs : dec SEMICOLON . decs 

	VAR	shift 16
	FUNCTION	shift 15

	vardec	goto 14
	funcdec	goto 13
	decs	goto 26
	dec	goto 11

	.	reduce by rule 15


state 23:

	exp : LET decs IN . exps END 

	INT	shift 5
	ID	shift 4
	LET	shift 3

	exp	goto 28
	exps	goto 27

	.	reduce by rule 12


state 24:

	funcdec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 

	LPAREN	shift 29


	.	error


state 25:

	vardec : VAR ID . ASSIGN exp 

	ASSIGN	shift 30


	.	error


state 26:

	decs : dec SEMICOLON decs .  (reduce by rule 13)



	.	reduce by rule 13


state 27:

	exp : LET decs IN exps . END 

	END	shift 31


	.	error


state 28:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exps : exp . SEMICOLON exps 
	exps : exp .  (reduce by rule 11)

	SEMICOLON	shift 32
	PLUS	shift 9
	MINUS	shift 8
	TIMES	shift 7
	DIVIDE	shift 6


	.	reduce by rule 11


state 29:

	funcdec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 

	ID	shift 34

	tyfields	goto 33

	.	reduce by rule 20


state 30:

	vardec : VAR ID ASSIGN . exp 

	INT	shift 5
	ID	shift 4
	LET	shift 3

	exp	goto 35

	.	error


state 31:

	exp : LET decs IN exps END .  (reduce by rule 9)



	.	reduce by rule 9


state 32:

	exps : exp SEMICOLON . exps 

	INT	shift 5
	ID	shift 4
	LET	shift 3

	exp	goto 28
	exps	goto 36

	.	reduce by rule 12


state 33:

	funcdec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 

	RPAREN	shift 37


	.	error


state 34:

	tyfields : ID . COLON typeid COMMA tyfields 
	tyfields : ID . COLON typeid 

	COLON	shift 38


	.	error


state 35:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 22)

	PLUS	shift 9
	MINUS	shift 8
	TIMES	shift 7
	DIVIDE	shift 6


	.	reduce by rule 22


state 36:

	exps : exp SEMICOLON exps .  (reduce by rule 10)



	.	reduce by rule 10


state 37:

	funcdec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 

	EQ	shift 39


	.	error


state 38:

	tyfields : ID COLON . typeid COMMA tyfields 
	tyfields : ID COLON . typeid 

	ID	shift 41

	typeid	goto 40

	.	error


state 39:

	funcdec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	INT	shift 5
	ID	shift 4
	LET	shift 3

	exp	goto 42

	.	error


state 40:

	tyfields : ID COLON typeid . COMMA tyfields 
	tyfields : ID COLON typeid .  (reduce by rule 19)

	COMMA	shift 43


	.	reduce by rule 19


state 41:

	typeid : ID .  (reduce by rule 21)



	.	reduce by rule 21


state 42:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	funcdec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 23)

	PLUS	shift 9
	MINUS	shift 8
	TIMES	shift 7
	DIVIDE	shift 6


	.	reduce by rule 23


state 43:

	tyfields : ID COLON typeid COMMA . tyfields 

	ID	shift 34

	tyfields	goto 44

	.	reduce by rule 20


state 44:

	tyfields : ID COLON typeid COMMA tyfields .  (reduce by rule 18)



	.	reduce by rule 18


state 45:


	EOF	accept


	.	error

47 of 117 action table entries left after compaction
26 goto table entries
