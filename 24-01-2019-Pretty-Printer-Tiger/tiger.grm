%%
%term	EOF
	| SEMICOLON
	| INT of int
	| PLUS | MINUS | TIMES | DIVIDE
	| EQ

%nonterm 	init		of Ast.exp list
		| 	program  	of Ast.exp list
        | 	exp     	of Ast.exp
		|	exps 		of Ast.exp list
	
%pos int
%verbose


%eop EOF
%noshift EOF

%left SEMICOLON
%left TIMES DIVIDE
%left PLUS MINUS

%name Tiger

%%

init	: 	program					(program)

program	:							([])
		| 	exp SEMICOLON program	(exp::program)

exp     :   INT                     (Ast.INT(INT))
        |   exp PLUS exp            (Ast.BINOP(exp1,Ast.PLUS,exp2))
		|	exp MINUS exp			(Ast.BINOP(exp1,Ast.MINUS,exp2))
		|	exp TIMES exp			(Ast.BINOP(exp1,Ast.TIMES,exp2))
		|	exp DIVIDE exp			(Ast.BINOP(exp1,Ast.DIVIDE,exp2))
