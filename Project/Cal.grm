%%
%term	EOF
	| SEMICOLON
	| INT
	| STRING
	| BOOL
	| NUMCONST of int
	| STRINGCONST of string
	| BOOLCONST of bool
	| ID of string
	| PLUS | MINUS | TIMES | DIVIDE | MOD
	| EQ | NEQ | LE | LT | GE | GT
	| UMINUS | NOT 
	| ASSIGN | COMMA | COLON 
	| DOT | LBRACK | RBRACK | LBRACE | RBRACE | LPAREN | RPAREN
	| IF | ELSE | STATIC | WHILE | RETURN | BREAK
	| OR | AND | XOR | VAR

%nonterm	program  		of Ast.program
		|	declarationList of Ast.declaration list
		|	declaration		of Ast.declaration
		|	typeSpecifier	of Ast.typeSpecifier
		|	varDeclList		of Ast.varDeclId list
		|	varDeclId		of Ast.varDeclId
		|	varDeclaration	of Ast.declaration
		|	funDeclaration	of Ast.funDeclaration
		|	paramList		of Ast.param list
		|	param			of Ast.param
		|	paramIdList		of Ast.paramId list
		|	paramId			of Ast.paramId
		|	simpleExpression	of Ast.simpleExpression
		|	immutable		of Ast.immutable

%keyword INT STRING BOOL


%pos int
%verbose


%eop EOF
%noshift EOF

%left SEMICOLON
%right UMINUS NOT
%left TIMES DIVIDE MOD
%left PLUS MINUS
%left EQ NEQ
%left AND 
%left XOR 
%left OR 
%left ASSIGN
%left COMMA

%name Cal

%%

program				:	declarationList						(declarationList)

declarationList		:	declaration declarationList			(declaration::declarationList)
					|										([])

declaration			:	funDeclaration						(Ast.FUNDEC(funDeclaration))
					|	varDeclaration						(varDeclaration)

varDeclaration		:	typeSpecifier varDeclList SEMICOLON (Ast.VARDEC(typeSpecifier , varDeclList))

varDeclList			:	varDeclId							([varDeclId])
					|	varDeclId COMMA varDeclList			(varDeclId::varDeclList)

varDeclId			:	ID									(Ast.VARDEC_IDEN(ID))
					|	ID	LBRACK NUMCONST RBRACK			(Ast.VARDEC_ARR_IDEN(ID , NUMCONST))
					|	ID COLON simpleExpression			(Ast.VARDEC_INIT(ID, simpleExpression))

funDeclaration		:	typeSpecifier ID LPAREN paramList RPAREN LBRACE varDeclaration RBRACE
															(Ast.RETFUNC(typeSpecifier, ID, paramList, varDeclaration))

paramList			:	param SEMICOLON paramList			(param::paramList)
					|	param								([param])

param				:	typeSpecifier paramIdList			(Ast.PARAM(typeSpecifier, paramIdList))

paramIdList			:	paramId COMMA paramIdList			(paramId::paramIdList)
					|	paramId								([paramId])

paramId				:	ID									(Ast.PARAM_IDEN(ID))
					|	ID LBRACK RBRACK					(Ast.PARAM_ARR_IDEN(ID))

simpleExpression	:	immutable							(Ast.IMMUTABLE(immutable))
					|	simpleExpression PLUS simpleExpression		(Ast.OPERATION(simpleExpression1, Ast.PLUS, simpleExpression2))
					|	simpleExpression MINUS simpleExpression		(Ast.OPERATION(simpleExpression1, Ast.MINUS, simpleExpression2))
					|	simpleExpression TIMES simpleExpression		(Ast.OPERATION(simpleExpression1, Ast.TIMES, simpleExpression2))
					|	simpleExpression DIVIDE simpleExpression	(Ast.OPERATION(simpleExpression1, Ast.DIVIDE, simpleExpression2))
					|	simpleExpression MOD simpleExpression		(Ast.OPERATION(simpleExpression1, Ast.MOD, simpleExpression2))

immutable			:	NUMCONST							(Ast.NUM_CONST(NUMCONST))
					|	STRINGCONST							(Ast.STRING_CONST(STRINGCONST))
					|	BOOLCONST							(Ast.BOOL_CONST(BOOLCONST))

typeSpecifier		:	INT									(Ast.INT)
					|	BOOL								(Ast.BOOL)
					|	STRING								(Ast.STRING)